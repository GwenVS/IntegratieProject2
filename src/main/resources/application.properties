# Option 1: use in-memory H2 database
#spring.datasource.url=jdbc:h2:mem:KandoeDB;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
# Option 2: instead of in-memory database a standalone H2 server can also be used
# Download H2 Server Platform-Independent Zip file from http://www.h2database.com/html/download.html
# Start a H2 server from command line with: java -cp h2*.jar org.h2.tools.Server and use
#spring.datasource.url=jdbc:postgresql://ec2-54-243-31-34.compute-1.amazonaws.com:5432/postgresql-animate-27784?sslmode=require&user=zukulhdsapsjgk&password=49a2583b0c2e76ddec639469c877495efa966aeacdfb3a3810d12e34c7bdad2e
#spring.datasource.url=jpostgres://zukulhdsapsjgk:49a2583b0c2e76ddec639469c877495efa966aeacdfb3a3810d12e34c7bdad2e@ec2-54-243-31-34.compute-1.amazonaws.com:5432/d8g5o7qeoe1u7l
spring.datasource.url=jdbc:postgresql://ec2-54-243-31-34.compute-1.amazonaws.com:5432/d8g5o7qeoe1u7l?sslmode=require
spring.datasource.username=zukulhdsapsjgk
spring.datasource.password=49a2583b0c2e76ddec639469c877495efa966aeacdfb3a3810d12e34c7bdad2e
#spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#spring.datasource.data=classpath:/sql/data.sql

server.port=9090

logging.level.org.springframework.web=ERROR


#Jwt Settings
jwt.expiration_time=3600
jwt.secret=CPPStaatVoorCaraPilsPremium